/*
Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
Triangle 	  	Tn=n(n+1)/2 	  	1, 3, 6, 10, 15, ...
Pentagonal 	  	Pn=n(3n−1)/2 	  	1, 5, 12, 22, 35, ...
Hexagonal 	  	Hn=n(2n−1) 	  	1, 6, 15, 28, 45, ...

It can be verified that T285 = P165 = H143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
*/

use std::time::Instant;

fn generate_triangles(start: u64, end: u64) -> Vec<u64> {
    let mut v: Vec<u64> = vec![];
    for i in start..end {
        v.push(i*(i + 1) / 2);
    }
    v
}

fn generate_pentagonals(start: u64, end: u64) -> Vec<u64> {
    let mut v: Vec<u64> = vec![];
    for i in start..end {
        v.push(i*(3 * i - 1) / 2);
    }
    v
}

pub fn main() {
    let now = Instant::now();
    let tris = generate_triangles(285, 200000);
    let pents = generate_pentagonals(165, 200000);
    for i in 144..200000 {
        let hex = i * (2 * i - 1);
        if tris.contains(&hex) && pents.contains(&hex) {
            println!("{}", hex);
            break;
        }
    }
    println!("Script took {} milliseconds to run", now.elapsed().as_millis());
}